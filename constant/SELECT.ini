SELECT 
    c.id AS customer_id,
    c.name AS customer_name,
    c.phoneNumber,
    c.created_at,
    c.userId,
    COALESCE(i.name, 'غير متوفر') AS cylinder_name,

    CASE 
        WHEN 
            CAST(
                COALESCE(SUM(CASE 
                    WHEN t.transaction_type = 'بيع' AND ti.status = 'ممتلئ' THEN CAST(ti.quantity AS FLOAT)  
                    ELSE 0 
                END), 0) 
                - 
                COALESCE(SUM(CASE 
                    WHEN t.transaction_type = 'إرجاع' AND ti.status = 'فارغ' THEN CAST(ti.quantity AS FLOAT)  
                    ELSE 0 
                END), 0) 
            AS SIGNED
        ) > 0 THEN 'فارغ'
        ELSE 'ممتلئ'
    END AS cylinder_status,

    -- استخدام DISTINCT لتجنب التكرار في الحسابات
    ABS(
        CAST(
            COALESCE(SUM(DISTINCT CASE 
                WHEN t.transaction_type = 'بيع' AND ti.status = 'ممتلئ' THEN CAST(ti.quantity AS FLOAT)  
                ELSE 0 
            END), 0) 
            - 
            COALESCE(SUM(DISTINCT CASE 
                WHEN t.transaction_type = 'إرجاع' AND ti.status = 'فارغ' THEN CAST(ti.quantity AS FLOAT)  
                ELSE 0 
            END), 0) 
            AS SIGNED
        )
    ) AS cylinder_amount,

    -- إجمالي المدفوعات
    COALESCE(SUM(p.amount), 0) AS total_payments,

    -- إجمالي السحوبات من البنك المتعلقة بالعميل
    COALESCE(SUM(CASE 
        WHEN bt.transaction_type = 'withdrawal' THEN CAST(bt.amount AS DOUBLE)
        ELSE 0 
    END), 0) AS total_withdrawals,

    -- إجمالي الإيداعات للبنك المتعلقة بالعميل
    COALESCE(SUM(CASE 
        WHEN bt.transaction_type = 'deposit' THEN CAST(bt.amount AS DOUBLE)
        ELSE 0 
    END), 0) AS total_deposits,

    -- إجمالي المصاريف المالية المتعلقة بالعميل
    COALESCE(SUM(CASE 
        WHEN ft.transaction_type = 'expense' THEN CAST(ft.amount AS DOUBLE)
        ELSE 0 
    END), 0) AS total_expenses,

    -- ✅ الرصيد النهائي للعميل
    (
        COALESCE(SUM(p.amount), 0) 
        + COALESCE(SUM(CASE WHEN bt.transaction_type = 'deposit' THEN CAST(bt.amount AS DOUBLE) ELSE 0 END), 0)
    ) - (
        COALESCE(SUM(CASE WHEN t.transaction_type = 'بيع' THEN ti.quantity * ti.price ELSE 0 END), 0) 
        + COALESCE(SUM(CASE WHEN bt.transaction_type = 'withdrawal' THEN CAST(bt.amount AS DOUBLE) ELSE 0 END), 0)
        + COALESCE(SUM(CASE WHEN ft.transaction_type = 'expense' THEN CAST(ft.amount AS DOUBLE) ELSE 0 END), 0)
    ) AS final_balance

FROM customers c
LEFT JOIN transactions t ON c.id = t.customer_id
LEFT JOIN transaction_items ti ON t.id = ti.transaction_id
LEFT JOIN payments p ON t.id = p.transaction_id
LEFT JOIN bank_transactions bt ON c.id = bt.related_entity_id
LEFT JOIN financial_transactions ft ON c.id = ft.related_entity_id AND ft.entity_type = 'customer'
LEFT JOIN inventory i ON ti.inventory_id = i.id
GROUP BY c.id, i.id
ORDER BY cylinder_amount DESC, final_balance DESC;